// Generated from /home/bvrazvan/teme/tema2/Tema2/src/cool/lexer/CoolLexer.g4 by ANTLR 4.13.2

    package cool.lexer;
    import java.util.Stack;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CoolLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ERROR=1, CLASS=2, ELSE=3, FI=4, IF=5, IN=6, INHERITS=7, ISVOID=8, LET=9, 
		LOOP=10, POOL=11, THEN=12, WHILE=13, CASE=14, ESAC=15, NEW=16, OF=17, 
		NOT=18, COLON=19, TRUE=20, FALSE=21, TYPE=22, ID=23, INT=24, STRING=25, 
		SEMI=26, COMMA=27, ASSIGN=28, LPAREN=29, RPAREN=30, LBRACE=31, RBRACE=32, 
		PLUS=33, MINUS=34, MULT=35, DIV=36, LT=37, LE=38, EQUAL=39, RESULT=40, 
		DOT=41, AT=42, COMPLEMENT=43, LINE_COMMENT=44, BLOCK_COMMENT=45, BLOCK_COMMENT_EOF=46, 
		UNMATCHED=47, WS=48, INVALID_CHAR=49;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"CLASS", "ELSE", "FI", "IF", "IN", "INHERITS", "ISVOID", "LET", "LOOP", 
			"POOL", "THEN", "WHILE", "CASE", "ESAC", "NEW", "OF", "NOT", "COLON", 
			"TRUE", "FALSE", "TYPE", "LOWER_LETTER", "UPPER_LETTER", "LETTER", "EXTRA_LETTER", 
			"ID", "DIGIT", "INT", "ANY_LETTER", "STRING", "SEMI", "COMMA", "ASSIGN", 
			"LPAREN", "RPAREN", "LBRACE", "RBRACE", "PLUS", "MINUS", "MULT", "DIV", 
			"LT", "LE", "EQUAL", "RESULT", "DOT", "AT", "COMPLEMENT", "NEW_LINE", 
			"LINE_COMMENT", "BLOCK_COMMENT", "BLOCK_COMMENT_EOF", "UNMATCHED", "WS", 
			"INVALID_CHAR"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'class'", "'else'", "'fi'", "'if'", "'in'", "'inherits'", 
			"'isvoid'", "'let'", "'loop'", "'pool'", "'then'", "'while'", "'case'", 
			"'esac'", "'new'", "'of'", "'not'", "':'", "'true'", "'false'", null, 
			null, null, null, "';'", "','", "'<-'", "'('", "')'", "'{'", "'}'", "'+'", 
			"'-'", "'*'", "'/'", "'<'", "'<='", "'='", "'=>'", "'.'", "'@'", "'~'", 
			null, null, null, "'*)'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ERROR", "CLASS", "ELSE", "FI", "IF", "IN", "INHERITS", "ISVOID", 
			"LET", "LOOP", "POOL", "THEN", "WHILE", "CASE", "ESAC", "NEW", "OF", 
			"NOT", "COLON", "TRUE", "FALSE", "TYPE", "ID", "INT", "STRING", "SEMI", 
			"COMMA", "ASSIGN", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "PLUS", "MINUS", 
			"MULT", "DIV", "LT", "LE", "EQUAL", "RESULT", "DOT", "AT", "COMPLEMENT", 
			"LINE_COMMENT", "BLOCK_COMMENT", "BLOCK_COMMENT_EOF", "UNMATCHED", "WS", 
			"INVALID_CHAR"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	    Stack<Pair> commentsStack = new Stack<>();
	    Boolean eofMet = false;
	    Boolean unmatchedMet = false;
	    private void raiseError(String msg) {
	        setText(msg);
	        setType(ERROR);
	    }


	public CoolLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CoolLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 29:
			STRING_action((RuleContext)_localctx, actionIndex);
			break;
		case 51:
			BLOCK_COMMENT_EOF_action((RuleContext)_localctx, actionIndex);
			break;
		case 52:
			UNMATCHED_action((RuleContext)_localctx, actionIndex);
			break;
		case 54:
			INVALID_CHAR_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:

			    Boolean terminate = false;
			    String string = getText();
			    if (string.contains("\u0000")) {
			        raiseError("String contains null character");
			        break;
			    }
			    if (string.contains("\r\n")) {
			        raiseError("Unterminated string constant");
			        break;
			    }
			    if (string.charAt(string.length() - 1) - '\0' != 34) {
			        raiseError("EOF in string constant");
			        break;
			    }
			    string = string.substring(1);
			    if (string.length() == 0) {
			        setText(string);
			        break;
			    }
			    string = string.substring(0, string.length() - 1);
			    if (string.length() == 0) {
			        setText(string);
			        break;
			    }
			    for (int i = 0; i < string.length() && terminate == false; ++i) {
			        char currentChar = string.charAt(i);
			        if (i > 0) {
			            char prevChar = string.charAt(i - 1);
			            if (currentChar - '\0' == 10 && prevChar - '\0' != 92) {
			                raiseError("Unterminated string constant");
			                terminate = true;
			            }
			        }
			    }
			    if (terminate == true) {
			        break;
			    }
			    StringBuilder result = new StringBuilder();
			    for (int i = 0; i < string.length(); i++) {
			        char currentChar = string.charAt(i);
			        if (i > 0) {
			            char prevChar = string.charAt(i - 1);
			            if (prevChar == '\\' && currentChar == 'n') {
			                result.append('\n');
			                ++i;
			            }
			            else if (prevChar == '\\' && currentChar == 't') {
			                result.append('\t');
			                ++i;
			            }
			            else if (prevChar == '\\' && currentChar == 'f') {
			                result.append('\f');
			                ++i;
			            }
			            else if (prevChar == '\\' && currentChar == 'b') {
			                result.append('\b');
			                ++i;
			            } else {
			                result.append(prevChar);
			                if (i + 1 == string.length()) {
			                    result.append(currentChar);
			                }
			            }
			        }
			    }
			    if (string.length() == 1) {
			        result.append(string.charAt(0));
			    }
			    string = result.toString();
			    result = new StringBuilder();
			    for (int i = 0; i < string.length(); ++i) {
			        char currentChar = string.charAt(i);
			        if (currentChar == '\\' && i + 1 < string.length()) {
			            result.append(string.charAt(i + 1));
			            i++;
			        } else {
			            result.append(currentChar);
			        }
			    }
			    string = result.toString();
			    if (string.length() > 1024) {
			        raiseError("String constant too long");
			        break;
			    }
			    setText(string);
			    
			break;
		}
	}
	private void BLOCK_COMMENT_EOF_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1:
			raiseError("EOF in comment"); 
			break;
		}
	}
	private void UNMATCHED_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2:
			raiseError("Unmatched *)");
			break;
		}
	}
	private void INVALID_CHAR_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3:
			raiseError("Invalid character: " + getText());
			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u00001\u018e\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u00021\u00071\u00022\u00072\u00023\u00073\u00024\u00074\u00025\u0007"+
		"5\u00026\u00076\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001"+
		"\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001"+
		"\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012"+
		"\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014"+
		"\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014"+
		"\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014"+
		"\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014"+
		"\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014"+
		"\u0005\u0014\u00e9\b\u0014\n\u0014\f\u0014\u00ec\t\u0014\u0003\u0014\u00ee"+
		"\b\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001"+
		"\u0017\u0001\u0018\u0003\u0018\u00f7\b\u0018\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0005\u0019\u00fd\b\u0019\n\u0019\f\u0019\u0100\t\u0019"+
		"\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0003\u0019\u0106\b\u0019"+
		"\u0001\u001a\u0001\u001a\u0001\u001b\u0004\u001b\u010b\b\u001b\u000b\u001b"+
		"\f\u001b\u010c\u0001\u001c\u0001\u001c\u0003\u001c\u0111\b\u001c\u0001"+
		"\u001d\u0001\u001d\u0005\u001d\u0115\b\u001d\n\u001d\f\u001d\u0118\t\u001d"+
		"\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0003\u001d\u011e\b\u001d"+
		"\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f"+
		"\u0001 \u0001 \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001"+
		"$\u0001$\u0001%\u0001%\u0001&\u0001&\u0001\'\u0001\'\u0001(\u0001(\u0001"+
		")\u0001)\u0001*\u0001*\u0001*\u0001+\u0001+\u0001,\u0001,\u0001,\u0001"+
		"-\u0001-\u0001.\u0001.\u0001/\u0001/\u00010\u00030\u014a\b0\u00010\u0001"+
		"0\u00011\u00011\u00011\u00011\u00051\u0152\b1\n1\f1\u0155\t1\u00011\u0001"+
		"1\u00012\u00012\u00012\u00012\u00012\u00052\u015e\b2\n2\f2\u0161\t2\u0001"+
		"2\u00012\u00012\u00012\u00012\u00013\u00013\u00013\u00013\u00053\u016c"+
		"\b3\n3\f3\u016f\t3\u00013\u00053\u0172\b3\n3\f3\u0175\t3\u00013\u0005"+
		"3\u0178\b3\n3\f3\u017b\t3\u00013\u00013\u00013\u00014\u00014\u00014\u0001"+
		"4\u00014\u00015\u00045\u0186\b5\u000b5\f5\u0187\u00015\u00015\u00016\u0001"+
		"6\u00016\u0004\u0116\u015f\u016d\u0179\u00007\u0001\u0002\u0003\u0003"+
		"\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013"+
		"\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011"+
		"!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0000-\u0000/\u00001\u00003\u0017"+
		"5\u00007\u00189\u0000;\u0019=\u001a?\u001bA\u001cC\u001dE\u001eG\u001f"+
		"I K!M\"O#Q$S%U&W\'Y([)]*_+a\u0000c,e-g.i/k0m1\u0001\u0000\t\u0001\u0000"+
		"az\u0001\u0000AZ\u0002\u0000AZaz\u0004\u0000\b\n\f\f  \\\\\u0001\u0000"+
		"09\u0001\u0000\\\\\u0001\u0000\n\n\u0001\u0000)*\u0003\u0000\t\n\f\r "+
		" \u019e\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000"+
		"\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000"+
		"\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000"+
		"\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000"+
		"\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000"+
		"\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000"+
		"\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000"+
		"\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000"+
		"!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001"+
		"\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000"+
		"\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000"+
		"\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?"+
		"\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000"+
		"\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000"+
		"\u0000I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M"+
		"\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000"+
		"\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000"+
		"\u0000W\u0001\u0000\u0000\u0000\u0000Y\u0001\u0000\u0000\u0000\u0000["+
		"\u0001\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000_\u0001\u0000"+
		"\u0000\u0000\u0000c\u0001\u0000\u0000\u0000\u0000e\u0001\u0000\u0000\u0000"+
		"\u0000g\u0001\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000\u0000k"+
		"\u0001\u0000\u0000\u0000\u0000m\u0001\u0000\u0000\u0000\u0001o\u0001\u0000"+
		"\u0000\u0000\u0003u\u0001\u0000\u0000\u0000\u0005z\u0001\u0000\u0000\u0000"+
		"\u0007}\u0001\u0000\u0000\u0000\t\u0080\u0001\u0000\u0000\u0000\u000b"+
		"\u0083\u0001\u0000\u0000\u0000\r\u008c\u0001\u0000\u0000\u0000\u000f\u0093"+
		"\u0001\u0000\u0000\u0000\u0011\u0097\u0001\u0000\u0000\u0000\u0013\u009c"+
		"\u0001\u0000\u0000\u0000\u0015\u00a1\u0001\u0000\u0000\u0000\u0017\u00a6"+
		"\u0001\u0000\u0000\u0000\u0019\u00ac\u0001\u0000\u0000\u0000\u001b\u00b1"+
		"\u0001\u0000\u0000\u0000\u001d\u00b6\u0001\u0000\u0000\u0000\u001f\u00ba"+
		"\u0001\u0000\u0000\u0000!\u00bd\u0001\u0000\u0000\u0000#\u00c1\u0001\u0000"+
		"\u0000\u0000%\u00c3\u0001\u0000\u0000\u0000\'\u00c8\u0001\u0000\u0000"+
		"\u0000)\u00ed\u0001\u0000\u0000\u0000+\u00ef\u0001\u0000\u0000\u0000-"+
		"\u00f1\u0001\u0000\u0000\u0000/\u00f3\u0001\u0000\u0000\u00001\u00f6\u0001"+
		"\u0000\u0000\u00003\u0105\u0001\u0000\u0000\u00005\u0107\u0001\u0000\u0000"+
		"\u00007\u010a\u0001\u0000\u0000\u00009\u0110\u0001\u0000\u0000\u0000;"+
		"\u0112\u0001\u0000\u0000\u0000=\u0121\u0001\u0000\u0000\u0000?\u0123\u0001"+
		"\u0000\u0000\u0000A\u0125\u0001\u0000\u0000\u0000C\u0128\u0001\u0000\u0000"+
		"\u0000E\u012a\u0001\u0000\u0000\u0000G\u012c\u0001\u0000\u0000\u0000I"+
		"\u012e\u0001\u0000\u0000\u0000K\u0130\u0001\u0000\u0000\u0000M\u0132\u0001"+
		"\u0000\u0000\u0000O\u0134\u0001\u0000\u0000\u0000Q\u0136\u0001\u0000\u0000"+
		"\u0000S\u0138\u0001\u0000\u0000\u0000U\u013a\u0001\u0000\u0000\u0000W"+
		"\u013d\u0001\u0000\u0000\u0000Y\u013f\u0001\u0000\u0000\u0000[\u0142\u0001"+
		"\u0000\u0000\u0000]\u0144\u0001\u0000\u0000\u0000_\u0146\u0001\u0000\u0000"+
		"\u0000a\u0149\u0001\u0000\u0000\u0000c\u014d\u0001\u0000\u0000\u0000e"+
		"\u0158\u0001\u0000\u0000\u0000g\u0167\u0001\u0000\u0000\u0000i\u017f\u0001"+
		"\u0000\u0000\u0000k\u0185\u0001\u0000\u0000\u0000m\u018b\u0001\u0000\u0000"+
		"\u0000op\u0005c\u0000\u0000pq\u0005l\u0000\u0000qr\u0005a\u0000\u0000"+
		"rs\u0005s\u0000\u0000st\u0005s\u0000\u0000t\u0002\u0001\u0000\u0000\u0000"+
		"uv\u0005e\u0000\u0000vw\u0005l\u0000\u0000wx\u0005s\u0000\u0000xy\u0005"+
		"e\u0000\u0000y\u0004\u0001\u0000\u0000\u0000z{\u0005f\u0000\u0000{|\u0005"+
		"i\u0000\u0000|\u0006\u0001\u0000\u0000\u0000}~\u0005i\u0000\u0000~\u007f"+
		"\u0005f\u0000\u0000\u007f\b\u0001\u0000\u0000\u0000\u0080\u0081\u0005"+
		"i\u0000\u0000\u0081\u0082\u0005n\u0000\u0000\u0082\n\u0001\u0000\u0000"+
		"\u0000\u0083\u0084\u0005i\u0000\u0000\u0084\u0085\u0005n\u0000\u0000\u0085"+
		"\u0086\u0005h\u0000\u0000\u0086\u0087\u0005e\u0000\u0000\u0087\u0088\u0005"+
		"r\u0000\u0000\u0088\u0089\u0005i\u0000\u0000\u0089\u008a\u0005t\u0000"+
		"\u0000\u008a\u008b\u0005s\u0000\u0000\u008b\f\u0001\u0000\u0000\u0000"+
		"\u008c\u008d\u0005i\u0000\u0000\u008d\u008e\u0005s\u0000\u0000\u008e\u008f"+
		"\u0005v\u0000\u0000\u008f\u0090\u0005o\u0000\u0000\u0090\u0091\u0005i"+
		"\u0000\u0000\u0091\u0092\u0005d\u0000\u0000\u0092\u000e\u0001\u0000\u0000"+
		"\u0000\u0093\u0094\u0005l\u0000\u0000\u0094\u0095\u0005e\u0000\u0000\u0095"+
		"\u0096\u0005t\u0000\u0000\u0096\u0010\u0001\u0000\u0000\u0000\u0097\u0098"+
		"\u0005l\u0000\u0000\u0098\u0099\u0005o\u0000\u0000\u0099\u009a\u0005o"+
		"\u0000\u0000\u009a\u009b\u0005p\u0000\u0000\u009b\u0012\u0001\u0000\u0000"+
		"\u0000\u009c\u009d\u0005p\u0000\u0000\u009d\u009e\u0005o\u0000\u0000\u009e"+
		"\u009f\u0005o\u0000\u0000\u009f\u00a0\u0005l\u0000\u0000\u00a0\u0014\u0001"+
		"\u0000\u0000\u0000\u00a1\u00a2\u0005t\u0000\u0000\u00a2\u00a3\u0005h\u0000"+
		"\u0000\u00a3\u00a4\u0005e\u0000\u0000\u00a4\u00a5\u0005n\u0000\u0000\u00a5"+
		"\u0016\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005w\u0000\u0000\u00a7\u00a8"+
		"\u0005h\u0000\u0000\u00a8\u00a9\u0005i\u0000\u0000\u00a9\u00aa\u0005l"+
		"\u0000\u0000\u00aa\u00ab\u0005e\u0000\u0000\u00ab\u0018\u0001\u0000\u0000"+
		"\u0000\u00ac\u00ad\u0005c\u0000\u0000\u00ad\u00ae\u0005a\u0000\u0000\u00ae"+
		"\u00af\u0005s\u0000\u0000\u00af\u00b0\u0005e\u0000\u0000\u00b0\u001a\u0001"+
		"\u0000\u0000\u0000\u00b1\u00b2\u0005e\u0000\u0000\u00b2\u00b3\u0005s\u0000"+
		"\u0000\u00b3\u00b4\u0005a\u0000\u0000\u00b4\u00b5\u0005c\u0000\u0000\u00b5"+
		"\u001c\u0001\u0000\u0000\u0000\u00b6\u00b7\u0005n\u0000\u0000\u00b7\u00b8"+
		"\u0005e\u0000\u0000\u00b8\u00b9\u0005w\u0000\u0000\u00b9\u001e\u0001\u0000"+
		"\u0000\u0000\u00ba\u00bb\u0005o\u0000\u0000\u00bb\u00bc\u0005f\u0000\u0000"+
		"\u00bc \u0001\u0000\u0000\u0000\u00bd\u00be\u0005n\u0000\u0000\u00be\u00bf"+
		"\u0005o\u0000\u0000\u00bf\u00c0\u0005t\u0000\u0000\u00c0\"\u0001\u0000"+
		"\u0000\u0000\u00c1\u00c2\u0005:\u0000\u0000\u00c2$\u0001\u0000\u0000\u0000"+
		"\u00c3\u00c4\u0005t\u0000\u0000\u00c4\u00c5\u0005r\u0000\u0000\u00c5\u00c6"+
		"\u0005u\u0000\u0000\u00c6\u00c7\u0005e\u0000\u0000\u00c7&\u0001\u0000"+
		"\u0000\u0000\u00c8\u00c9\u0005f\u0000\u0000\u00c9\u00ca\u0005a\u0000\u0000"+
		"\u00ca\u00cb\u0005l\u0000\u0000\u00cb\u00cc\u0005s\u0000\u0000\u00cc\u00cd"+
		"\u0005e\u0000\u0000\u00cd(\u0001\u0000\u0000\u0000\u00ce\u00cf\u0005I"+
		"\u0000\u0000\u00cf\u00d0\u0005n\u0000\u0000\u00d0\u00ee\u0005t\u0000\u0000"+
		"\u00d1\u00d2\u0005B\u0000\u0000\u00d2\u00d3\u0005o\u0000\u0000\u00d3\u00d4"+
		"\u0005o\u0000\u0000\u00d4\u00ee\u0005l\u0000\u0000\u00d5\u00d6\u0005S"+
		"\u0000\u0000\u00d6\u00d7\u0005t\u0000\u0000\u00d7\u00d8\u0005r\u0000\u0000"+
		"\u00d8\u00d9\u0005i\u0000\u0000\u00d9\u00da\u0005n\u0000\u0000\u00da\u00ee"+
		"\u0005g\u0000\u0000\u00db\u00dc\u0005S\u0000\u0000\u00dc\u00dd\u0005E"+
		"\u0000\u0000\u00dd\u00de\u0005L\u0000\u0000\u00de\u00df\u0005F\u0000\u0000"+
		"\u00df\u00e0\u0005_\u0000\u0000\u00e0\u00e1\u0005T\u0000\u0000\u00e1\u00e2"+
		"\u0005Y\u0000\u0000\u00e2\u00e3\u0005P\u0000\u0000\u00e3\u00ee\u0005E"+
		"\u0000\u0000\u00e4\u00ea\u0003-\u0016\u0000\u00e5\u00e9\u0003/\u0017\u0000"+
		"\u00e6\u00e9\u0005_\u0000\u0000\u00e7\u00e9\u00035\u001a\u0000\u00e8\u00e5"+
		"\u0001\u0000\u0000\u0000\u00e8\u00e6\u0001\u0000\u0000\u0000\u00e8\u00e7"+
		"\u0001\u0000\u0000\u0000\u00e9\u00ec\u0001\u0000\u0000\u0000\u00ea\u00e8"+
		"\u0001\u0000\u0000\u0000\u00ea\u00eb\u0001\u0000\u0000\u0000\u00eb\u00ee"+
		"\u0001\u0000\u0000\u0000\u00ec\u00ea\u0001\u0000\u0000\u0000\u00ed\u00ce"+
		"\u0001\u0000\u0000\u0000\u00ed\u00d1\u0001\u0000\u0000\u0000\u00ed\u00d5"+
		"\u0001\u0000\u0000\u0000\u00ed\u00db\u0001\u0000\u0000\u0000\u00ed\u00e4"+
		"\u0001\u0000\u0000\u0000\u00ee*\u0001\u0000\u0000\u0000\u00ef\u00f0\u0007"+
		"\u0000\u0000\u0000\u00f0,\u0001\u0000\u0000\u0000\u00f1\u00f2\u0007\u0001"+
		"\u0000\u0000\u00f2.\u0001\u0000\u0000\u0000\u00f3\u00f4\u0007\u0002\u0000"+
		"\u0000\u00f40\u0001\u0000\u0000\u0000\u00f5\u00f7\u0007\u0003\u0000\u0000"+
		"\u00f6\u00f5\u0001\u0000\u0000\u0000\u00f72\u0001\u0000\u0000\u0000\u00f8"+
		"\u00fe\u0003+\u0015\u0000\u00f9\u00fd\u0003/\u0017\u0000\u00fa\u00fd\u0005"+
		"_\u0000\u0000\u00fb\u00fd\u00035\u001a\u0000\u00fc\u00f9\u0001\u0000\u0000"+
		"\u0000\u00fc\u00fa\u0001\u0000\u0000\u0000\u00fc\u00fb\u0001\u0000\u0000"+
		"\u0000\u00fd\u0100\u0001\u0000\u0000\u0000\u00fe\u00fc\u0001\u0000\u0000"+
		"\u0000\u00fe\u00ff\u0001\u0000\u0000\u0000\u00ff\u0106\u0001\u0000\u0000"+
		"\u0000\u0100\u00fe\u0001\u0000\u0000\u0000\u0101\u0102\u0005s\u0000\u0000"+
		"\u0102\u0103\u0005e\u0000\u0000\u0103\u0104\u0005l\u0000\u0000\u0104\u0106"+
		"\u0005f\u0000\u0000\u0105\u00f8\u0001\u0000\u0000\u0000\u0105\u0101\u0001"+
		"\u0000\u0000\u0000\u01064\u0001\u0000\u0000\u0000\u0107\u0108\u0007\u0004"+
		"\u0000\u0000\u01086\u0001\u0000\u0000\u0000\u0109\u010b\u00035\u001a\u0000"+
		"\u010a\u0109\u0001\u0000\u0000\u0000\u010b\u010c\u0001\u0000\u0000\u0000"+
		"\u010c\u010a\u0001\u0000\u0000\u0000\u010c\u010d\u0001\u0000\u0000\u0000"+
		"\u010d8\u0001\u0000\u0000\u0000\u010e\u0111\u0003/\u0017\u0000\u010f\u0111"+
		"\u00031\u0018\u0000\u0110\u010e\u0001\u0000\u0000\u0000\u0110\u010f\u0001"+
		"\u0000\u0000\u0000\u0111:\u0001\u0000\u0000\u0000\u0112\u0116\u0005\""+
		"\u0000\u0000\u0113\u0115\t\u0000\u0000\u0000\u0114\u0113\u0001\u0000\u0000"+
		"\u0000\u0115\u0118\u0001\u0000\u0000\u0000\u0116\u0117\u0001\u0000\u0000"+
		"\u0000\u0116\u0114\u0001\u0000\u0000\u0000\u0117\u011d\u0001\u0000\u0000"+
		"\u0000\u0118\u0116\u0001\u0000\u0000\u0000\u0119\u011e\u0005\"\u0000\u0000"+
		"\u011a\u011b\b\u0005\u0000\u0000\u011b\u011e\u0003a0\u0000\u011c\u011e"+
		"\u0005\u0000\u0000\u0001\u011d\u0119\u0001\u0000\u0000\u0000\u011d\u011a"+
		"\u0001\u0000\u0000\u0000\u011d\u011c\u0001\u0000\u0000\u0000\u011e\u011f"+
		"\u0001\u0000\u0000\u0000\u011f\u0120\u0006\u001d\u0000\u0000\u0120<\u0001"+
		"\u0000\u0000\u0000\u0121\u0122\u0005;\u0000\u0000\u0122>\u0001\u0000\u0000"+
		"\u0000\u0123\u0124\u0005,\u0000\u0000\u0124@\u0001\u0000\u0000\u0000\u0125"+
		"\u0126\u0005<\u0000\u0000\u0126\u0127\u0005-\u0000\u0000\u0127B\u0001"+
		"\u0000\u0000\u0000\u0128\u0129\u0005(\u0000\u0000\u0129D\u0001\u0000\u0000"+
		"\u0000\u012a\u012b\u0005)\u0000\u0000\u012bF\u0001\u0000\u0000\u0000\u012c"+
		"\u012d\u0005{\u0000\u0000\u012dH\u0001\u0000\u0000\u0000\u012e\u012f\u0005"+
		"}\u0000\u0000\u012fJ\u0001\u0000\u0000\u0000\u0130\u0131\u0005+\u0000"+
		"\u0000\u0131L\u0001\u0000\u0000\u0000\u0132\u0133\u0005-\u0000\u0000\u0133"+
		"N\u0001\u0000\u0000\u0000\u0134\u0135\u0005*\u0000\u0000\u0135P\u0001"+
		"\u0000\u0000\u0000\u0136\u0137\u0005/\u0000\u0000\u0137R\u0001\u0000\u0000"+
		"\u0000\u0138\u0139\u0005<\u0000\u0000\u0139T\u0001\u0000\u0000\u0000\u013a"+
		"\u013b\u0005<\u0000\u0000\u013b\u013c\u0005=\u0000\u0000\u013cV\u0001"+
		"\u0000\u0000\u0000\u013d\u013e\u0005=\u0000\u0000\u013eX\u0001\u0000\u0000"+
		"\u0000\u013f\u0140\u0005=\u0000\u0000\u0140\u0141\u0005>\u0000\u0000\u0141"+
		"Z\u0001\u0000\u0000\u0000\u0142\u0143\u0005.\u0000\u0000\u0143\\\u0001"+
		"\u0000\u0000\u0000\u0144\u0145\u0005@\u0000\u0000\u0145^\u0001\u0000\u0000"+
		"\u0000\u0146\u0147\u0005~\u0000\u0000\u0147`\u0001\u0000\u0000\u0000\u0148"+
		"\u014a\u0005\r\u0000\u0000\u0149\u0148\u0001\u0000\u0000\u0000\u0149\u014a"+
		"\u0001\u0000\u0000\u0000\u014a\u014b\u0001\u0000\u0000\u0000\u014b\u014c"+
		"\u0005\n\u0000\u0000\u014cb\u0001\u0000\u0000\u0000\u014d\u014e\u0005"+
		"-\u0000\u0000\u014e\u014f\u0005-\u0000\u0000\u014f\u0153\u0001\u0000\u0000"+
		"\u0000\u0150\u0152\b\u0006\u0000\u0000\u0151\u0150\u0001\u0000\u0000\u0000"+
		"\u0152\u0155\u0001\u0000\u0000\u0000\u0153\u0151\u0001\u0000\u0000\u0000"+
		"\u0153\u0154\u0001\u0000\u0000\u0000\u0154\u0156\u0001\u0000\u0000\u0000"+
		"\u0155\u0153\u0001\u0000\u0000\u0000\u0156\u0157\u00061\u0001\u0000\u0157"+
		"d\u0001\u0000\u0000\u0000\u0158\u0159\u0005(\u0000\u0000\u0159\u015a\u0005"+
		"*\u0000\u0000\u015a\u015f\u0001\u0000\u0000\u0000\u015b\u015e\u0003e2"+
		"\u0000\u015c\u015e\t\u0000\u0000\u0000\u015d\u015b\u0001\u0000\u0000\u0000"+
		"\u015d\u015c\u0001\u0000\u0000\u0000\u015e\u0161\u0001\u0000\u0000\u0000"+
		"\u015f\u0160\u0001\u0000\u0000\u0000\u015f\u015d\u0001\u0000\u0000\u0000"+
		"\u0160\u0162\u0001\u0000\u0000\u0000\u0161\u015f\u0001\u0000\u0000\u0000"+
		"\u0162\u0163\u0005*\u0000\u0000\u0163\u0164\u0005)\u0000\u0000\u0164\u0165"+
		"\u0001\u0000\u0000\u0000\u0165\u0166\u00062\u0001\u0000\u0166f\u0001\u0000"+
		"\u0000\u0000\u0167\u0168\u0005(\u0000\u0000\u0168\u0169\u0005*\u0000\u0000"+
		"\u0169\u016d\u0001\u0000\u0000\u0000\u016a\u016c\b\u0007\u0000\u0000\u016b"+
		"\u016a\u0001\u0000\u0000\u0000\u016c\u016f\u0001\u0000\u0000\u0000\u016d"+
		"\u016e\u0001\u0000\u0000\u0000\u016d\u016b\u0001\u0000\u0000\u0000\u016e"+
		"\u0173\u0001\u0000\u0000\u0000\u016f\u016d\u0001\u0000\u0000\u0000\u0170"+
		"\u0172\u0003e2\u0000\u0171\u0170\u0001\u0000\u0000\u0000\u0172\u0175\u0001"+
		"\u0000\u0000\u0000\u0173\u0171\u0001\u0000\u0000\u0000\u0173\u0174\u0001"+
		"\u0000\u0000\u0000\u0174\u0179\u0001\u0000\u0000\u0000\u0175\u0173\u0001"+
		"\u0000\u0000\u0000\u0176\u0178\b\u0007\u0000\u0000\u0177\u0176\u0001\u0000"+
		"\u0000\u0000\u0178\u017b\u0001\u0000\u0000\u0000\u0179\u017a\u0001\u0000"+
		"\u0000\u0000\u0179\u0177\u0001\u0000\u0000\u0000\u017a\u017c\u0001\u0000"+
		"\u0000\u0000\u017b\u0179\u0001\u0000\u0000\u0000\u017c\u017d\u0005\u0000"+
		"\u0000\u0001\u017d\u017e\u00063\u0002\u0000\u017eh\u0001\u0000\u0000\u0000"+
		"\u017f\u0180\u0005*\u0000\u0000\u0180\u0181\u0005)\u0000\u0000\u0181\u0182"+
		"\u0001\u0000\u0000\u0000\u0182\u0183\u00064\u0003\u0000\u0183j\u0001\u0000"+
		"\u0000\u0000\u0184\u0186\u0007\b\u0000\u0000\u0185\u0184\u0001\u0000\u0000"+
		"\u0000\u0186\u0187\u0001\u0000\u0000\u0000\u0187\u0185\u0001\u0000\u0000"+
		"\u0000\u0187\u0188\u0001\u0000\u0000\u0000\u0188\u0189\u0001\u0000\u0000"+
		"\u0000\u0189\u018a\u00065\u0001\u0000\u018al\u0001\u0000\u0000\u0000\u018b"+
		"\u018c\t\u0000\u0000\u0000\u018c\u018d\u00066\u0004\u0000\u018dn\u0001"+
		"\u0000\u0000\u0000\u0014\u0000\u00e8\u00ea\u00ed\u00f6\u00fc\u00fe\u0105"+
		"\u010c\u0110\u0116\u011d\u0149\u0153\u015d\u015f\u016d\u0173\u0179\u0187"+
		"\u0005\u0001\u001d\u0000\u0006\u0000\u0000\u00013\u0001\u00014\u0002\u0001"+
		"6\u0003";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}